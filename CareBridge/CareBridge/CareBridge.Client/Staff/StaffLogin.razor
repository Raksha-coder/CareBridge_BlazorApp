@using App.Core.StorageState
@page "/staff/stafflogin"
@layout LoginLayout
@rendermode @(new InteractiveWebAssemblyRenderMode(prerender: false))
<PageTitle>Staff Login</PageTitle>

<h1>Staff Login</h1>

<EditForm Model="@loginDto" OnValidSubmit="OnLogin">
    <DataAnnotationsValidator />
    <div class="row mt-3">
        <div class="col-12">
            <MatTextField @bind-Value="@loginDto.Username" Outlined="true" Label="Username" Style="width: 100%;" />
            <ValidationMessage For="@(() => loginDto.Username)" />
        </div>
    </div>

    <div class="row mt-3">
        <div class="col-12">
            <MatTextField @bind-Value="@loginDto.Password" Outlined="true" Label="Password" Style="width: 100%;" />
            <ValidationMessage For="@(() => loginDto.Password)" />
        </div>
    </div>

    <div class="row mt-3">
        <div class="col-12">
            <MatButton Type="submit" Raised="true" Color="MatButtonColor.Primary">
                Login
            </MatButton>
        </div>
    </div>

    <div class="row mt-3">
        <div class="col-12">
            <MatButtonLink Href="/forgotpassword">
                Forgot Password?
            </MatButtonLink>
        </div>
        <div class="col-12">
            <MatButtonLink Href="staff/registration">
                Have you registered?
            </MatButtonLink>
        </div>
    </div>
    <ValidationSummary />

</EditForm>

@code {

    [Inject]
    private NavigationManager NavigationManager { get; set; }


    private JsonModel jsonModel { get; set; }

    private LoginDto loginDto = new LoginDto();

    [Inject]
    private HttpClient httpClient { get; set; }

    private async Task OnLogin()
    {
        await httpClient.PostAsJsonAsync("api/Staff/LoginStaff", loginDto);
        NavigationManager.NavigateTo($"/staff/verifyotp/{loginDto.Username}");
    }

}
