@using App.Core.StorageState
@using Blazored.LocalStorage
@using CareBridge.Client.Auth
@page "/verifyaccount/{Username?}"
@rendermode @(new InteractiveWebAssemblyRenderMode(prerender: false))

<PageTitle>Verify Account</PageTitle>

<EditForm EditContext="@editContext" OnValidSubmit="VerifyOtp">
    <DataAnnotationsValidator />
    <h1>Verify OTP</h1>

    <div class="col-md-6">
        <MatTextField @bind-Value="@verifyOtpDto.Otp" Outlined="true" Label="OTP" Style="width: 100%;" />
        <ValidationMessage For="@(() => verifyOtpDto.Otp)" />
    </div>

    <div class="col-12 mt-3">
        <MatButton Type="submit" Raised="true" Color="MatButtonColor.Primary" disabled="@(!editContext.Validate())">
            Submit
        </MatButton>
    </div>
    <ValidationSummary />
    <MatToastContainer />
</EditForm>


@code {

    [Parameter]
    public string Username { get; set; }

    private VerifyOtpDto verifyOtpDto = new VerifyOtpDto();

    private EditContext editContext;

    private JsonModel jsonModel { get; set; }

    [Inject]
    public NavigationManager NavigationManager { get; set; }

    [Inject]
    public HttpClient Http { get; set; }

    [Inject]
    public IMatToaster Toaster { get; set; }

    [Inject]

    private CustomAuthenticationStateProvider AuthStateProvider { get; set; }

    protected override void OnInitialized()
    {
        verifyOtpDto.UserName = Username;
        editContext = new EditContext(verifyOtpDto);
        editContext.OnFieldChanged += (sender, args) =>
        {
            StateHasChanged(); // force refresh when field changes
        };
    }

    private async Task VerifyOtp()
    {
        if (verifyOtpDto.Otp == null)
        {
            Toaster.Add("Please enter OTP", MatToastType.Danger);
            return;
        }
        verifyOtpDto.UserName = Username;

        var response = await Http.PostAsJsonAsync<VerifyOtpDto>("api/Patient/VerifyOtp", verifyOtpDto);

        if (response.IsSuccessStatusCode)
        {
            jsonModel = await response.Content.ReadFromJsonAsync<JsonModel>();
            AuthStateProvider.MarkUserAsAuthenticated(jsonModel.Data.ToString());
            Toaster.Add(jsonModel.Message, MatToastType.Success); // ✅ Show success message
            NavigationManager.NavigateTo("/patientdashboard");
        }
        else
        {
            jsonModel = await response.Content.ReadFromJsonAsync<JsonModel>();
            Toaster.Add(jsonModel.Message ?? "OTP verification failed.", MatToastType.Danger);
            return;
        }
    }

}
