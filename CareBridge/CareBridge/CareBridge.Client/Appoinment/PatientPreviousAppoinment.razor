@page "/Appoinment/PatientPreviousAppoinment"
@using System.Text.Json
@layout MainLayout
@rendermode @(new InteractiveWebAssemblyRenderMode(prerender:false))

<div class="dashboard-container">
    <header class="page-header">
        <h1>PatientPreviousAppoinment</h1>
    </header>
    @if (appoinments != null && appoinments.Any())
    {
        <div class="doctor-grid">
            @foreach (var doc in appoinments)
            {
                <MatCard class="doctor-card">
                    <MatCardContent class="doctor-card-body">
                        <MatBody2 class="demo-mat-card-clean-margin">
                            <p><strong>Email:</strong> @doc.Date</p>
                            <p><strong>Email:</strong> @doc.StartTime</p>
                            <p><strong>Email:</strong> @doc.EndTime</p>
                            <p><strong>Phone No:</strong> @doc.StaffId</p>
                            <p><strong>Gender:</strong> @doc.Reason</p>
                            <p><strong>Address:</strong> @doc.Status</p>
                        </MatBody2>
                    </MatCardContent>
                    <MatCardActions class="doctor-card-actions">
                    </MatCardActions>
                </MatCard>
            }
        </div>
    }
    else
    {
        <h2 class="no-doctors">No Doctors Found</h2>
    }
</div>
@code {
    [Inject]
    private NavigationManager? NavigationManager { get; set; }


    private List<Appoinment> appoinments = new List<Appoinment>();

    [Inject]
    private HttpClient Http { get; set; }

    // private List<StaffRegistrationDto> staff = new List<StaffRegistrationDto>();

    private JsonResponseDto? jsonResponseDto;

    protected override async Task OnInitializedAsync()
    {


        jsonResponseDto = await Http.GetFromJsonAsync<JsonResponseDto>("api/Appoinment/GetAppoinmenByStaffId");

        @if (jsonResponseDto != null && jsonResponseDto.Data != null)
        {
            var json = jsonResponseDto.Data.ToString();
            appoinments = JsonSerializer.Deserialize<List<Appoinment>>(json, new JsonSerializerOptions { PropertyNameCaseInsensitive = true });
            // Log the patient object as JSON
            Console.WriteLine($"Patient Data: {JsonSerializer.Serialize(appoinments)}");

        }
    }
}
